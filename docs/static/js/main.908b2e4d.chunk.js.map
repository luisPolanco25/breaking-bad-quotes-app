{"version":3,"sources":["BreakingBadApp.js","hooks/useCounter.js","hooks/useFetch.js","index.js"],"names":["BreakingBadApp","initialState","useState","counter","setCounter","increment","decrement","reset","useCounter","url","isMounted","useRef","data","loading","error","state","setState","useEffect","current","fetch","then","response","json","catch","useFetch","author","quote","className","onClick","ReactDOM","render","document","getElementById"],"mappings":"qKAMaA,G,KAAiB,WAAO,IAAD,ECJV,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAEfC,mBAASD,GAFM,mBAEtCE,EAFsC,KAE7BC,EAF6B,KAIvCC,EAAY,WACdD,EAAWD,EAAU,IAGnBG,EAAY,WACdF,EAAWD,EAAU,IAGnBI,EAAQ,WACVH,EAAWH,IAGf,MAAO,CACHE,UACAE,YACAC,YACAC,SDdyBC,CAAW,GAAjCL,EAFyB,EAEzBA,QAASE,EAFgB,EAEhBA,UAFgB,EEHZ,SAACI,GAErB,IAAMC,EAAYC,kBAAO,GAFI,EAIHT,mBAAS,CAC/BU,KAAM,KACNC,SAAS,EACTC,MAAO,OAPkB,mBAItBC,EAJsB,KAIfC,EAJe,KAiD7B,OAvCAC,qBAAU,WACN,OAAO,WACHP,EAAUQ,SAAU,KAEzB,IAGHD,qBAAU,WAEND,EAAS,CACLJ,KAAM,KACNC,SAAS,EACTC,MAAO,OAGXK,MAAMV,GACLW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAR,GAEMF,EAAUQ,SACVF,EAAS,CACLH,SAAS,EACTC,MAAO,KACPF,YAIfW,OAAM,WACHP,EAAS,CACLJ,KAAM,KACNC,SAAS,EACTC,MAAO,mCAIhB,CAACL,IAIGM,EF1CiBS,CAAS,6CAAD,OAA8CrB,IAAvEU,EAJyB,EAIzBA,QAASD,EAJgB,EAIhBA,KAJgB,IAMNA,GAAQA,EAAK,GAAhCa,EANyB,EAMzBA,OAAQC,EANiB,EAMjBA,MAEf,OACI,6BACI,mDACA,6BAECb,EACG,yBAAKc,UAAU,gCAAf,cAIA,gCAAYA,UAAU,uBACtB,2BAAID,GACJ,4BAAQC,UAAU,qBAAqBF,IAK3C,4BAAQE,UAAU,kBAAkBC,QAASvB,GAA7C,kBG1BZwB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.908b2e4d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useFetch } from './hooks/useFetch';\r\nimport { useCounter } from './hooks/useCounter';\r\n\r\nimport './BreakingBadApp.css';\r\n\r\nexport const BreakingBadApp = () => {\r\n\r\n    const {counter, increment} = useCounter(1);\r\n    \r\n    const {loading, data} = useFetch(`https://www.breakingbadapi.com/api/quotes/${counter}`);\r\n\r\n    const {author, quote} = !!data && data[0];\r\n\r\n    return (\r\n        <div>\r\n            <h1>Breaking Bad Quotes</h1>\r\n            <hr />\r\n\r\n            {loading ? (\r\n                <div className=\"alert alert-info text-center\">\r\n                Loading...    \r\n                </div>\r\n            ) : (\r\n                <blockquote className=\"blockquote text-end\">\r\n                <p>{quote}</p>\r\n                <footer className=\"blockquote-footer\">{author}</footer>\r\n                </blockquote>\r\n            )\r\n            }\r\n\r\n            <button className=\"btn btn-primary\" onClick={increment}>Next phrase</button>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const useCounter = (initialState = 10) => {\r\n\r\n    const [counter, setCounter] = useState(initialState)\r\n\r\n    const increment = () => {\r\n        setCounter(counter + 1);\r\n    }\r\n\r\n    const decrement = () => {\r\n        setCounter(counter - 1);\r\n    }\r\n\r\n    const reset = () => {\r\n        setCounter(initialState);\r\n    }\r\n\r\n    return {\r\n        counter,\r\n        increment,\r\n        decrement,\r\n        reset,\r\n    };\r\n\r\n}\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\n\r\nexport const useFetch = (url) => {\r\n\r\n    const isMounted = useRef(true);\r\n\r\n    const [state, setState] = useState({\r\n        data: null,\r\n        loading: true,\r\n        error: null,\r\n    });\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            isMounted.current = false;\r\n        }\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setState({\r\n            data: null,\r\n            loading: true,\r\n            error: null,\r\n        });\r\n\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            \r\n                if (isMounted.current) {\r\n                    setState({\r\n                        loading: false,\r\n                        error: null,\r\n                        data,\r\n                    });\r\n                }\r\n        })\r\n        .catch(() => {\r\n            setState({\r\n                data: null,\r\n                loading: false,\r\n                error: 'It couldn\\'t load the info'\r\n            })\r\n        });\r\n\r\n    }, [url]);\r\n    \r\n    \r\n    \r\n    return state;\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BreakingBadApp } from './BreakingBadApp';\n\n\nReactDOM.render(\n    <BreakingBadApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}